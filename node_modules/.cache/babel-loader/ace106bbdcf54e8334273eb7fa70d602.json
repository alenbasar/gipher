{"ast":null,"code":"var _jsxFileName = \"/home/alenbasar/Development/gipher/src/components/VideoToGif.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { createFFmpeg, fetchFile } from \"@ffmpeg/ffmpeg\";\nimport { saveAs } from \"file-saver\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ffmpeg = createFFmpeg({\n  corePath: \"https://unpkg.com/@ffmpeg/core@0.10.0/dist/ffmpeg-core.js\",\n  log: true\n});\n\nconst VideoToGif = () => {\n  _s();\n\n  const [video, setVideo] = useState();\n  const [gif, setGif] = useState();\n  const [ready, setReady] = useState(false); // Async file loading\n\n  const load = async () => {\n    try {\n      await ffmpeg.load();\n      setReady(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => load(), []);\n\n  const convertToGif = async () => {\n    // Write the file to memory\n    ffmpeg.FS(\"writeFile\", \"test.mp4\", await fetchFile(video)); // Run the FFMpeg command\n\n    await ffmpeg.run(\"-i\", \"test.mp4\", \"-t\", \"2.5\", \"-ss\", \"2.0\", \"-f\", \"gif\", \"out.gif\"); // Read the result\n\n    const data = ffmpeg.FS(\"readFile\", \"out.gif\"); // Create a URL\n\n    const url = URL.createObjectURL(new Blob([data.buffer], {\n      type: \"image/gif\"\n    }));\n    setGif(url);\n  };\n\n  const downloadImage = () => {\n    saveAs(gif.toDataURL(), gif); // Put your image url here.\n  };\n\n  return ready ? /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"c-converter\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-converter__video-to-gif\",\n      children: [\"Upload video\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        id: \"file\",\n        onChange: e => {\n          var _e$target$files;\n\n          return setVideo((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files.item(0));\n        },\n        className: \"c-converter__video-to-gif__input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"c-converter__buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          className: \"c-converter__buttons__upload\",\n          children: \"Convert video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: convertToGif,\n          className: \"c-converter__buttons__convert\",\n          children: \"Convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"c-converter__video-to-gif__video-container\",\n        children: video && /*#__PURE__*/_jsxDEV(\"video\", {\n          className: \"c-converter__video-to-gif__video-container__video\",\n          controls: true,\n          src: URL.createObjectURL(video)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"c-converter__video-to-gif__divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"c-converter__video-to-gif__gif-container\",\n        children: gif && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: gif,\n          className: \"c-converter__video-to-gif__gif-container__gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoToGif, \"gYj7ykAHuLwJOV5EJ7gI2NKug/E=\");\n\n_c = VideoToGif;\nexport default VideoToGif;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoToGif\");","map":{"version":3,"sources":["/home/alenbasar/Development/gipher/src/components/VideoToGif.js"],"names":["React","useState","useEffect","createFFmpeg","fetchFile","saveAs","Loading","ffmpeg","corePath","log","VideoToGif","video","setVideo","gif","setGif","ready","setReady","load","error","console","convertToGif","FS","run","data","url","URL","createObjectURL","Blob","buffer","type","downloadImage","toDataURL","e","target","files","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { createFFmpeg, fetchFile } from \"@ffmpeg/ffmpeg\";\nimport { saveAs } from \"file-saver\";\nimport Loading from \"./Loading\";\n\nconst ffmpeg = createFFmpeg({\n  corePath: \"https://unpkg.com/@ffmpeg/core@0.10.0/dist/ffmpeg-core.js\",\n  log: true,\n});\n\nconst VideoToGif = () => {\n  const [video, setVideo] = useState();\n  const [gif, setGif] = useState();\n  const [ready, setReady] = useState(false);\n  // Async file loading\n  const load = async () => {\n    try {\n      await ffmpeg.load();\n      setReady(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => load(), []);\n\n  const convertToGif = async () => {\n    // Write the file to memory\n    ffmpeg.FS(\"writeFile\", \"test.mp4\", await fetchFile(video));\n\n    // Run the FFMpeg command\n    await ffmpeg.run(\n      \"-i\",\n      \"test.mp4\",\n      \"-t\",\n      \"2.5\",\n      \"-ss\",\n      \"2.0\",\n      \"-f\",\n      \"gif\",\n      \"out.gif\"\n    );\n\n    // Read the result\n    const data = ffmpeg.FS(\"readFile\", \"out.gif\");\n\n    // Create a URL\n    const url = URL.createObjectURL(\n      new Blob([data.buffer], { type: \"image/gif\" })\n    );\n    setGif(url);\n  };\n\n  const downloadImage = () => {\n    saveAs(gif.toDataURL(), gif); // Put your image url here.\n  };\n\n  return ready ? (\n    <section className=\"c-converter\">\n      <div className=\"c-converter__video-to-gif\">\n        Upload video\n        <input\n          type=\"file\"\n          name=\"file\"\n          id=\"file\"\n          onChange={(e) => setVideo(e.target.files?.item(0))}\n          className=\"c-converter__video-to-gif__input\"\n        />\n        <div className=\"c-converter__buttons\">\n          <label htmlFor=\"file\" className=\"c-converter__buttons__upload\">\n            Convert video\n          </label>\n          <button\n            onClick={convertToGif}\n            className=\"c-converter__buttons__convert\"\n          >\n            Convert\n          </button>\n        </div>\n        <div className=\"c-converter__video-to-gif__video-container\">\n          {video && (\n            <video\n              className=\"c-converter__video-to-gif__video-container__video\"\n              controls\n              src={URL.createObjectURL(video)}\n            ></video>\n          )}\n        </div>\n        <div className=\"c-converter__video-to-gif__divider\"></div>\n        <div className=\"c-converter__video-to-gif__gif-container\">\n          {gif && (\n            <img\n              src={gif}\n              className=\"c-converter__video-to-gif__gif-container__gif\"\n            />\n          )}\n        </div>\n      </div>\n    </section>\n  ) : (\n    <Loading />\n  );\n};\n\nexport default VideoToGif;\n"]},"metadata":{},"sourceType":"module"}